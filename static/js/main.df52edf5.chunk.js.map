{"version":3,"sources":["Todo.js","NewTodo.js","App.js","index.js"],"names":["Todo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","completed","check","bind","assertThisInitialized","event","self","data","xhttp5","XMLHttpRequest","onreadystatechange","readyState","status","todo","JSON","parse","responseText","console","log","setState","open","id","setRequestHeader","send","stringify","className","react_default","a","createElement","onClick","text","delete","Component","NewTodo","htmlFor","type","name","onChange","value","input","add","App","todos","sortList","target","xhttp","preventDefault","document","getElementById","xhttp2","toConsumableArray","concat","newArray","sort","b","localeCompare","itemId","parentNode","xhttp4","remainingTodos","filter","_this2","src_NewTodo_0","map","src_Todo_0","key","created","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.df52edf5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Todo.css';\n\nclass Todo extends Component {\n  constructor(props){\n    super(props)\n    this.state={\n      completed:this.props.completed\n    }\n    this.check=this.check.bind(this);\n  }\n  check(event){\n    const self = this;\n    var data = {\n      completed: !this.props.completed\n    }\n    var xhttp5 = new XMLHttpRequest();\n    xhttp5.onreadystatechange = function() {\n      if (this.readyState === 4 && this.status === 200) {\n        var todo = JSON.parse(this.responseText);\n        console.log(todo);\n        self.setState({completed:true});\n      } else if (this.readyState === 4){\n        console.log(this.responseText);\n      }\n    }\n      xhttp5.open(\"PUT\", \"https://cse204.work/todos/\"+this.props.id, true);\n      xhttp5.setRequestHeader(\"Content-type\", \"application/json\");\n      xhttp5.setRequestHeader(\"x-api-key\", \"62a83b-dd0595-259c51-78553e-b3f8de\");\n      xhttp5.send(JSON.stringify(data));\n  }\n\n  render() {\n    var className=\"toDoTask\";\n    if (this.state.completed){\n      className=\"toDoTask completed\";\n    }\n    return (\n      //how to add toDoTask class name\n      <span className={className} id={this.props.id}>\n        <button onClick={this.check} className=\"checkbox\"> &#10004; </button>\n        <p> {this.props.text} </p>\n        <button onClick={this.props.delete} className=\"deleteBtn\"> X </button>\n      </span>\n    );\n  }\n}\n\nexport default Todo;\n","import React, { Component } from 'react';\nimport './NewTodo.css';\n\nclass NewTodo extends Component {\n\n  render() {\n    return (\n      <div id=\"new-todo\">\n        <label htmlFor=\"new-task\"> New To Do: </label>\n        <input id=\"new-task\" type=\"text\" name=\"new-task\" onChange={this.props.onChange} value={this.props.input}/>\n        <button id=\"add\" type=\"button\" name=\"add\" onClick={this.props.add}> Add </button>\n      </div>\n    );\n  }\n}\n\nexport default NewTodo;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Todo from './Todo';\nimport NewTodo from './NewTodo';\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state={todos:[], input:''}\n    this.add=this.add.bind(this);\n    this.sortList=this.sortList.bind(this);\n    this.delete=this.delete.bind(this);\n    this.onChange=this.onChange.bind(this);\n  }\n\n  onChange(event) {\n  // Set the state to the value of the input\n  this.setState({\n    input: event.target.value\n  });\n  }\n\n  componentDidMount(){\n    const self = this;\n    var xhttp = new XMLHttpRequest();\n    xhttp.onreadystatechange = function() {\n        if (this.readyState === 4 && this.status === 200) {\n            var todos = JSON.parse(this.responseText);\n            console.log(todos);\n            self.setState({todos:todos});\n          }\n    };\n    xhttp.open(\"GET\", \"https://cse204.work/todos\", true);\n    xhttp.setRequestHeader(\"x-api-key\",\"62a83b-dd0595-259c51-78553e-b3f8de\");\n    xhttp.send();\n  }\n\n  add(event){\n    event.preventDefault();\n    const self = this;\n    var data = {\n        text: document.getElementById(\"new-task\").value\n    }\n    // Initalize AJAX Request\n    var xhttp2 = new XMLHttpRequest();\n    // Response handler\n    xhttp2.onreadystatechange = function() {\n        // Wait for readyState = 4 & 200 response\n        if (this.readyState === 4 && this.status === 200) {\n            // parse JSON response\n            var todo = JSON.parse(this.responseText);\n            self.setState({todos:[...self.state.todos,todo], input:''});\n            console.log(todo);\n\n        } else if (this.readyState === 4) {\n            // this.status !== 200, error from server\n            console.log(this.responseText);\n        }\n    };\n    xhttp2.open(\"POST\", \"https://cse204.work/todos\", true);\n    xhttp2.setRequestHeader(\"Content-type\", \"application/json\");\n    xhttp2.setRequestHeader(\"x-api-key\", \"62a83b-dd0595-259c51-78553e-b3f8de\");\n    xhttp2.send(JSON.stringify(data));\n  }\n\n  sortList(){\n      const self = this;\n      var oldArray = self.state.todos;\n      var newArray = oldArray.sort(function (a, b) {\n      return a.text.localeCompare(b.text);\n      });\n      self.setState({todos:newArray});\n  }\n\n  delete(event){\n  //  const self = this;\n    const self=this;\n    var itemId=event.target.parentNode.id;\n    // event.persist();\n    var xhttp4 = new XMLHttpRequest();\n    // Response handler\n    xhttp4.onreadystatechange = function() {\n        // Wait for readyState = 4 & 200 response\n        if (this.readyState === 4 && this.status === 200) {\n            // parse JSON response\n            // remove actual items\n            var todo = JSON.parse(this.responseText);\n            console.log(todo);\n            // You need the id of the todo you want to delete as a variable.\n            const remainingTodos = self.state.todos.filter((todo) => {\n              // Looping through all todos, if the id of the current todo DOES NOT equal the id of the todo we want to delete, keep it\n              if (todo.id !== itemId) {\n                return todo;\n              }\n\n            });\n            self.setState({todos:remainingTodos});\n            // Update state with filtered list using this.setState();\n        } else if (this.readyState === 4) {\n            // this.status !== 200, error from server\n            console.log(this.responseText);\n        }\n    };\n    xhttp4.open(\"DELETE\", \"https://cse204.work/todos/\"+itemId, true);\n    xhttp4.setRequestHeader(\"Content-type\", \"application/json\");\n    xhttp4.setRequestHeader(\"x-api-key\", \"62a83b-dd0595-259c51-78553e-b3f8de\");\n    xhttp4.send();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Isabel's To Do App</h1>\n        <div id=\"todo-list\">\n          <NewTodo add={this.add} sort={this.sortList} onChange={this.onChange} input={this.state.input}/>\n          <button id=\"sort\" type=\"button\" name=\"sort\" onClick={this.sortList}> Sort List By Alphabetical Order </button>\n          {this.state.todos.map((todo)=>\n          <Todo key={todo.id}\n                id={todo.id}\n                text={todo.text}\n                completed={todo.completed}\n                created={todo.created}\n                delete={this.delete} />)}\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}